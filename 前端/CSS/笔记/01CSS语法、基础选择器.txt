1.CSS概述
  1.什么是CSS？
    CSS：Cascading Style Sheets层叠样式表，级联样式表，简称样式表。
  2.作用
    设置HTML网页中元素的样式
  3.CSS与HTML之间关系
    HTML：构建网页的结构，展示内容。
    CSS：构建网页元素的样式，修饰网页。
  4.HTML和CSS的使用原则
    W3C建议尽量使用css的样式来取代HTML属性
2.CSS基础语法
  1.使用CSS的方式
    1.内联样式
      又称为行内样式
      特点：将样式定义在HTML开始标记中
      语法：
        <ANY style="样式声明1;样式声明2; ..."></ANY>
      样式声明：由样式属性和值组成
                属性名和值之间用冒号连接
		多个样式声明之间用分号分隔
      常用的属性和值：
           1.设置文本颜色属性
	     属性：color
	     值：合法的颜色值(颜色的英文单词)
	   2.设置背景颜色属性
	     属性：background
	     值：合法的颜色值(颜色的英文单词)
	   3.设置字体大小属性
	     属性：font-size
	     值：以px或pt为单位的数字

    2.内部样式
      将样式定义在头元素<head>中,在<head>中增加一对<style>标记，在<style>标记中定义样式。
      语法：
         <head>
	   <style>
	      样式规则
	   </style>
	 </head>
      样式规则：由选择器和样式声明组成。
      样式规则：
         选择器{
	    样式声明；
	 }
        
      选择器：规范页面中哪些元素能够使用定义好的样式。
      元素选择器：由元素的名称作为选择器
          p{
	     样式声明;
	     color:red;
	    }
	  div{样式声明}
	  a{样式声明}
	  img{样式声明}
        练习：
	  1.创建多个p标记，内容随意
	  2.创建多个h3标记，内容随意
	  使用内部样式完成以下操作：
	     页面中所有p标记的文本颜色为蓝色，大小为24px;
	     页面中所有h3标记，文本颜色为灰色，背景颜色为橙色。

    3.外部样式
      独立于任何网页的位置处，声明一个样式表文件（.css为后缀），在CSS文件中保存样式规则。
      使用步骤：
         1.创建样式表文件，并保存样式规则
	 2.在网页引入样式表文件
	   <head>
	     <link rel="stylesheet" href="css文件的路径">
	   </head>

  2.CSS的样式特征
    1.继承性
      必须是父子（有嵌套层级）关系结构
      大部分样式都可以直接被继承（子继承父）
    2.层叠性
      可以为一个元素定义多个样式规则，样式规则如果不冲突时，那么多个样式会叠加到一起被元素所应用。
       div{
          color:red;
       }
       div{
         font-size:12px;
       }
       div{
         background:blue;
       }
      
    3.优先级
      在层叠的基础上，如果样式声明冲突时，css样式会按照优先级来应用。
      由低到高：
      浏览器默认设置 低
      样式表（外部样式和内部样式就近原则）居中
      内联样式       高

      练习：
         按以下结构布局，内容随意：
	   <section>
	      <div>
	         <a href="#">测试文本</a>
	      </div>
	   </section>
	  1.用内部样式为section设置字体大小为30px,文本颜色为蓝色，运行网页查看文本的效果
	  2.在section中用内联样式为其设置字体颜色为红色，再次运行网页查看变化。

	  3.用外部样式设置section背景颜色为灰色，引入外部样式文件，再在内部样式表中定义section背景颜色为粉色，查看页面效果，交换内部和外部样式表的位置再次查看页面效果。
    
    4.调整显示的优先级
      将!important添加到属性值之后，与值之间用空格隔开即可。
      作用：调整显示的优先级
      ex:
        color:red !important;
3.CSS基础选择器（重点）
   1.选择器的作用
     规范页面中哪些元素能够使用定义好的样式（为了匹配页面的元素）
   2.选择器详解
     1.通用选择器
       作用：可以匹配页面上的任何一个元素
       语法：*{样式声明}
       尽量少用，效率较低。
     2.元素选择器
       作用：设置页面上某种元素的默认样式
       语法：标记名称{样式声明}
       ex:
          div{...}
	  p{...}
	  span{...}
     3.类选择
       作用：定义页面上某个或某些元素的样式（一段公共的样式，谁想用谁就可以引用）
       引用：通过元素的class属性进行引用
       语法：
           1.声明
	     .类名{样式声明}
	     注意:
	       1.圆点不能省略
	       2.类名不能以数字开头
	       3.不能包含特殊字符（#,%,^,&,@...）,能包含（_,-）
	   2.引用
	     <ANY class="类名"></ANY>
       多类选择器：
           让元素引用多个类选择器
	   语法：<ANY class="类名1 类名2 ...">
       分类选择器：
           将元素选择器和类选择器联合使用
	   语法：元素名称.类选择器{样式声明}
	   ex:
	     div.text{}定义class为text的div元素的样式
	     span.map{}

        练习：
          1.在页面新建div元素和p元素，内容随意
	  2.用类选择器为所有元素设置字体颜色为红色
	  3.用分类选择器为p元素设置背景颜色为黑色。
   
     4.id选择器
       作用：设置指定id元素的样式（专属定制）
       语法：#id值{样式声明}
       练习：
         新建div，id为main,设置main的样式
	    文字大小为36px,
	    背景颜色为紫色(purple)，
	    斜体（font-style:italic;）
    5.群组选择器
      作用：将多个选择器放在一起进行样式的声明定义。
      语法：选择器1，选择器2，选择器3{样式声明}
      div,p,.myText,#main{color:red;}
      div{color:red;}
      p{color:red;}
      .myText{color:red;}
      #main{color:red;}

    6.后代选择器
      作用：通过元素的后代关系匹配元素
      后代：一级或多余一级的嵌套
      语法：选择器1 选择器2 选择器3{样式声明}
    7.子代选择器
       作用：通过元素的子代（一层层级）关系匹配元素
       语法：选择器1>选择器2{样式声明}
    8.伪类选择器
      作用：匹配元素不同状态的选择器
      语法：所有的伪类都是以:作为开始的
          选择器:伪类选择器{}
      伪类分两种：
         1.链接伪类
	    :link 匹配访问前的超级链接状态
	    :visited 匹配访问后的超级链接状态
	 2.动态伪类
	    :hover 匹配鼠标悬停在元素上时的状态
	    :active匹配元素被激活时的状态（文本框，按钮点击）
	    :focus 匹配元素获取焦点时的状态（文本框，密码框）

    9.选择器优先级
      权值：标识当前选择器的重要程度，权值越大优先级越高。
         元素选择器：1
	 类选择器：  10
	 伪类选择器：10
	 ID选择器：  100
	 内联样式：  1000
	 选择器的权值，加到一起，大的优先。
	 权值相同，以后定义的为主。
     练习：
        页面设置一个a元素，增加以下效果：
	   1.未被访问之前字体是黑色，没有下划线（text-decoration:none;）
	   2.鼠标悬停时，文本颜色为红色
	   3.被激活时（点击一瞬间），文本颜色为橙色
	   4.访问后，颜色为绿色

	课后作业：
        在页面中增加一个input文本框，默认效果字体颜色为灰色，字体为斜体（font-style:italic;）
	   1.被激活时，字体为非斜体（font-style:normal;）
	   2.获取焦点时，文本颜色为红色

      
  