www.caniuse.com
1.渐变
  1.什么是渐变
    渐变指的是多种颜色平缓变化的一种显示效果。
  2.渐变的主要因素 
    色标：一种颜色及其出现的位置
    一个渐变是由多个色标组成（至少两个）
  3.渐变分类
    1.线性渐变
      以直线的方向来填充渐变色
    2.径向渐变
      以圆形的方式实现渐变填充效果
    3.重复渐变
      将线性或径向渐变 重复几次实现填充
  4.线性渐变
    属性：background-image:
    取值：linear-gradient(angle,color-point1,clor-point2,...)
     angle:表示渐变填充的方向或角度
     取值：
        方向：
         1.to top 从下向上填充渐变色
	 2.to bottom 从上向下填充渐变色
	 3.to left 从右向左填充渐变色
	 4.to right 从左向右填充渐变色
       角度：
         1.0deg 从下向上，等同于to top
	 2.90deg 从左到右，等同于to right
	 3.180deg 从上向下，等同于to bottom
	 4.270deng 从右向左，等同于to left
     color-point:色标 颜色及其位置
         取值：颜色 以及 位置的组合，中间用空格隔开
	 ex: red 0% 在填充方向的开始位置处以红色来填充
	     green 50% 到填充方向一般的位置处，颜色变为绿色
	     blue 200px 
  5.径向渐变
    1.属性
      background-image:radial-gradient([size at position],color-point1,color-point2,...);
      size:半径，以px为单位的数字
      position:圆心所在的位置
         1.x y:具体数字
	 2.x% y%:元素宽个高的占比
	 3.关键字：
	    x:left/center/right
	    y:top/center/bottom
  6.重复渐变
    1.重复线性渐变
      background-image:repeating-linear-gradient(angle,color-point1,color-point2,...)
      color-point:位置一定要给绝对值，不要用相对单位%
    2.重复径向渐变
      background-image:repeating-radial-gradient([size at postion],color-point1,color-point2,...)
  7.浏览器兼容性（caniuse.com）
    各浏览器的新版本都支持渐变属性
    对于不支持的浏览器版本，可以通过增加浏览器前缀的方式，让浏览器支持渐变。
     Firefox:-moz-
     Chrome&Safari:-webkit-
     Opera:-o-
     IE:-ms-
   ex:
    background-image:-ms-linear-gradient(...);
    background-image:-moz-linear-gradient(...);
    background-image:-o-linear-gradient(...);
    background-image:-webkit-linear-gradient(...);
    background-image:linear-gradient(...);
2.文本格式化属性
  1.字体属性
    1.字体类型
      属性：font-family
      取值：用,隔开字体名列表
      ex:font-family:"微软雅黑",Arial,"黑体";
    2.字体大小
      属性：font-size
      取值：
        以px或pt为单位的数字
    3.字体加粗
      属性：font-weight
      取值：
         bold:加粗
         value值：整百倍数字（400-900），无单位。
	 normal:正常
    4.字体样式
      属性：font-style
      取值：
          1.italic:斜体显示
	  2.normal:正常字体
    5.小型大写字母
      将小写字符变为大写，但大小与小写字符一致 
      属性：font-variant
      取值：
         1.normal:正常
	 2.small-caps:将小写字符转为小型大写字符

       练习：创建一个网页，定义一个div，并设置id为main,内容随意（中英文结合）
       设置以下文本样式：
          1.字体为微软雅黑
	  2.字体大小为24px
	  3.文字加粗并倾斜显示
	  4.将所有的小写字符变为小型大写字符
    6.字体属性的简写
      简写方式：
       font:style variant weight size family;
       注意：使用简写方式，必须要设置family的值，否则无效
       ex:
	   font:12px; //错误
	   font:12px "微软雅黑"; //正确
  2.字体格式
    1.文本颜色
      属性：color
      取值：合法的颜色值
    2.文本排列
      作用：指定文本在水平方向的对齐方式
      属性：text-align
      取值：left/center/right/justify(两端对齐)
    3.文本修饰（线条）
      属性：text-decoration
      取值：
          underline:下划线
	  overline:上划线
	  line-through:删除线
	  none:无线条修饰
    4.行高
      作用：一行文本所占据的高度（如果设置的行高高度大于字体本身的大小，那么该行文本将在行高内呈现垂直居中的效果）
      属性：line-height
      取值：以px为单位的数字
    5.首行文本缩进
      属性：text-indent
      取值：以px为单位的数字
    6.文本阴影
      属性：text-shadow
      取值：h-shadow v-shadow blur color;
      练习：
       在上个练习基础上，增加以下效果：
           1.文本的排列方式为两端对齐
	   2.文字修饰为下划线修饰
	   3.首行缩进32px
	   4.文本阴影水平和垂直偏移为0，模糊距离为2px,颜色为红色

3.表格
  1.表格常用属性
    1.边距属性：padding
    2.边框属性：border
    3.尺寸属性：width,height
    4.文本格式化属性：font-*,text-*,line-height
    5.背景属性：颜色，图片，渐变
    6.vertical-align
      作用：指定单元格数据的垂直对齐方式
      取值：
         top:上对齐
	 middle:居中对齐
	 bottom:下对齐
     练习：
      创建一个400*400的表格，4行4列
         1.创建每个单元格的尺寸为100*100
	 2.设置表格和单元格的边框为1px solid #000;
	 3.尝试为每个td增加上外边距10px
  2.表格特有属性
    1.边框合并
      属性：border-collapse
      取值：
         1.separate 默认值，即分离边框模式
	 2.collapse 边框合并 
    2.边框边距
      作用：设置单元格之间或单元格与表格之间的距离。
      属性：border-spacing
      取值： 
         给一个值：水平和垂直距离相同
	 给两个值：
	     第一个值表示水平间距
	     第二个值表示垂直间距
        注意：只有在分离边框模式下，边框边距才有效，即border-collapse:separate时，border-spacing才有效。
	练习：
	   在上面表格练习基础上，设置表格边框为分离模式，并设置单元格之间水平间距为10px,垂直单元格之间间距为30px
    3.标题位置
      属性：caption-side
      取值：
         1.top 默认值，标题在表格内容之上
	 2.bottom 标题在表格的下方
    4.显示规则
      作用：用来帮助浏览器指定如何布局一张表，也就是指定td尺寸的计算方式。
      属性：table-layout
      取值：
         1.auto 默认值，即自动表格布局，列的尺寸实际上是由内容来决定的。
	 2.fixed 固定表格布局，列的尺寸由设定的值为准。
      自动布局&固定布局：
         1.自动布局
	   1.单元格的大小会适应内容
	   2.表格复杂时，加载速度较慢（缺点）
	   3.自动布局会比较灵活（优点）
	   4.适用于不确定每一列大小时使用
	 2.固定布局
	   1.单元格尺寸取决于设置的值
	   2.任何情况下都会加载显示表格（优点）
	   3.固定表格布局不够灵活
	   4.适用于确定每列大小时使用
4.定位
  1.定位
    定位：指的是元素在网页中出现的位置
  2.定位的分类
    1.普通流定位（文档流定位）
    2.浮动定位
    3.相对定位
    4.绝对定位
    5.固定定位
     
   课后作业：完成Day03文件夹中“作业.jpg”展示效果（"分类搜索"可不写）