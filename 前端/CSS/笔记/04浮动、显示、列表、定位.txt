1.浮动定位
  1.定位分类
     普通流定位（默认定位方式）
     浮动定位
     相对定位
     绝对定位
     固定定位
  2.普通流定位
    又称为文档流定位。
    1.每个元素在页面中都有自己的空间。
    2.每个元素都是在其父元素的左上角开始出现。
    3.页面中的块级按照从上往下逐个排列，每个元素独占一行。
    4.页面中的行内元素按照从左往右的顺序排列，多个元素在一行中显示。
    问题：如何让多个块级元素在一行中显示？
  3.浮动定位
    1.浮动特点
      1.元素一旦浮动起来，就会脱离文档流不占据页面的空间。
      2.元素一旦浮动起来，要么停靠在父元素的左边或右边，或其他已经浮动的元素的边缘上。
      3.浮动解决多个块级元素在一行中显示的问题。
    2.语法
      属性：float
      取值：
        left:左浮动，让元素停靠在父元素的左边，或挨着左侧已有的浮动元素
	right:右浮动，让元素停靠在父元素的右边，或挨着右侧已有的浮动元素
	none:无浮动，默认值。
    3.浮动引发的特殊效果
      1.当父元素显示不下所有已浮动元素时，最后一个将自动换行，但是有可能被卡住。
      2.元素一旦浮动起来后，将变为块级元素
        允许修改尺寸，能正常设置垂直外边距
      3.元素一旦浮动起来后，宽度将以内容为主（未指定宽度情况下）
      4.文本，行内元素，行内块元素是采用环绕的方式排列的，是不会被浮动元素压在底下的，而会巧妙的避开。
    4.清除浮动带来的影响
      元素一旦浮动起来后，就会对后续元素带来一定的位置影响（后续元素要上前补位），如果后续元素不想被影响（不想补位），那么就可以清除浮动的方式来解决。
      属性：clear
      取值：
          left:清除当前元素前面元素左浮动带来的影响。
	  right:清除当前元素前面元素右浮动带来的影响。
	  both:清除当前元素前面元素任何一种浮动带来的影响。
	  none:默认值，不做任何浮动的清除。
    5.浮动元素对父元素带来的影响
      元素的高度，都是以未浮动元素的方高度为准的，浮动元素是不占高度的（父元素没有高度了）
      解决父元素高度的方案：
          1.直接设置父元素的高度
	     弊端：不是每次都知道父元素的高度
	  2.设置父元素也浮动
             弊端：不是任何时候父元素都需要浮动，而且浮动后会影响后续元素
	  3.为父元素设置overflow
	    取值：hidden或auto
	    弊端：如果有内容溢出显示，也会一同隐藏
	  4.在父元素中，追加空子元素，并设置其clear:both;
2.显示
  1.显示方式
    1.什么是显示方式？
      决定元素在页面中的表现形式（块级，行内，行内块，table）
    2.语法
      属性：display
      取值：
          1.none 不显示元素-隐藏
	  2.block 让元素表现的与块级一致
	  3.inline 让元素表现的与行内元素一致
	  4.inline-block 让元素表现的与行内块一致
	  5.table 让元素表现的与表格一致
	    特点：
	       尺寸以内容为主
	       每个元素独占一行
	       允许修改尺寸
  2.显示效果
    1.显示\隐藏属性
      属性：visibility
      取值：
          1.hidden 元素不可见-隐藏
	  2.visible 默认值，元素可见

      面试题：display:none;与visibility:hidden;的区域？
          display:none;元素会脱离文档流，不占页面空间。
	  visibility:hidden;元素不会脱离文档流，占据页面空间。
  3.透明度
    属性：opacity
    取值：0.0(完全透明)-1.0(完全不透明)
    注意：
      rgba()与opacity的区别：
         opacity作用于元素以及元素内容的所有内容的透明度。而rgba()只作用于元素颜色或背景颜色。
  4.垂直方向对齐方式
    属性：vertical-align
    场合：
       1.表格中使用
         取值：
           top:顶部对齐
           middle:居中对齐
           bottom:底部对齐
       2.图片中使用
         取值：
	   top:顶部对齐
	   middle:居中对齐
	   bottom:底部对齐
	   baseline:基线对齐（默认值）
  5.光标
    1.作用：改变鼠标悬停在元素上时，鼠标的状态
    2.语法
      属性：cursor
      取值：
         default 
	 pointer:   小手
	 crosshair: +
	 text:      I
	 wait:      等待
	 help:      帮助
    练习：
      在网页中添加一张图片，并在图片后面加上一定的描述文字，要求文字与图片的对齐方式为靠底部对齐，并且鼠标移入到图片上时光标变为小手状态。
3.列表
  1.列表项标识
    属性:list-style-type 
    取值：
        none 无标识
	circle 空心圆
	disc 实心圆
	square 实心方块
  2.列表项图像
    属性：list-style-image
    取值：url(图像路径);
  3.列表项位置
    属性：list-style-position
    取值：
      outside 默认值，将标识放在内容区域之外
      inside 将标识放置于内容区域之内
  4.简写属性
    属性：list-style
    取值：type url() position;
    常用方式：list-style:none;
4.定位
  相对定位，绝对定位，固定定位
  1.定位属性
    属性：position
    取值：
        1.static:静态，默认值
	2.relative:相对定位
	3.absolute:绝对定位
	4.fixed:固定定位
  2.偏移属性
    top/bottom/left/right
    以上四个偏移属性取值都为数字(px)
    ex:
      top:150px; //元素向下偏移150px
      left:100px; //元素向右偏移100px
      right:-100px; //元素向右偏移100px
    1.相对定位
      1.什么是相对定位？
        元素会相对于它原来的位置偏移某个距离
      2.使用场合
        在做位置微调时使用
      3.语法
        position:relative;
	配合偏移属性实现定位
      练习：
        网页中添加三张图片，当鼠标悬停在图片上时，图片相对于它原来的位置往左上方偏移5px
    2.绝对定位
      1.语法
        属性：
	  position:absolute;
	  配合偏移属性实现定位
      2.特点
        1.绝对定位的元素会相对于离他最近的 已定位的祖先元素 去实现位置初始化。
	2.如果没有已定位的祖先元素，那么元素就相对于body去实现位置的初始化
	3.绝对定位的元素会脱离文档流-不占页面空间
        注意：子元素做绝对定位，父元素一般设为相对定位。
  
     课后作业：完成文件夹中"作业.png"效果。

    
